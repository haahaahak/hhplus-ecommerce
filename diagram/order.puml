@startuml
actor 사용자

participant "OrderController"
participant "OrderService"
participant "BalanceService"
participant "ProductService"
participant "BalanceRepository"
participant "ProductRepository"

사용자 -> OrderController : POST /order (userId, products[productId, quantity])
OrderController -> OrderService : 주문 요청 (userId, products[productId, quantity])

== 잔액 확인 ==
OrderService -> BalanceService : 잔액 확인 요청 (userId)
BalanceService -> BalanceRepository : 잔액 조회 (userId)
BalanceRepository -> BalanceService : 잔액 반환 (currentBalance)
BalanceService -> OrderService : 잔액 정보 반환 (currentBalance)

== 재고 확인 ==
OrderService -> ProductService : 상품 재고 확인 요청 (products[productId, quantity])
ProductService -> ProductRepository : 재고 조회 (productId, quantity)
ProductRepository -> ProductService : 재고 정보 반환 (availableQuantity)
ProductService -> OrderService : 재고 정보 반환 (availableQuantity)

== 결제 및 주문 처리 ==
OrderService -> BalanceService : 잔액 차감 요청 (userId, totalAmount)
BalanceService -> BalanceRepository : 잔액 차감 (userId, newBalance)
BalanceRepository -> BalanceService : 잔액 차감 완료
BalanceService -> OrderService : 잔액 차감 완료

OrderService -> ProductService : 재고 차감 요청 (productId, quantity)
ProductService -> ProductRepository : 재고 차감 (productId, quantity)
ProductRepository -> ProductService : 재고 차감 완료
ProductService -> OrderService : 재고 차감 완료

== 데이터 플랫폼 전송 ==
OrderService -> DataPlatform : 주문 정보 전송
DataPlatform -> OrderService : 전송 완료

OrderService -> OrderController : 주문 완료
OrderController -> 사용자 : 주문 완료 응답

@enduml
